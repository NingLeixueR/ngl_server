// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

#include "example.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_db_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_db_brief_db_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_example_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PLAYER_example_2eproto;
namespace pbexample {
class PROBUFF_EXAMPLE_PLAY_JOINDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_PLAY_JOIN> _instance;
} _PROBUFF_EXAMPLE_PLAY_JOIN_default_instance_;
class PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE> _instance;
} _PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE_default_instance_;
class PLAYERDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PLAYER> _instance;
} _PLAYER_default_instance_;
class PROBUFF_EXAMPLE_PLAY_MATCHINGDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_PLAY_MATCHING> _instance;
} _PROBUFF_EXAMPLE_PLAY_MATCHING_default_instance_;
class PROBUFF_EXAMPLE_PLAY_MATCHING_RESULTDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT> _instance;
} _PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT_default_instance_;
class PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRMDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM> _instance;
} _PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM_default_instance_;
class PROBUFF_EXAMPLE_PLAY_CANCELDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_PLAY_CANCEL> _instance;
} _PROBUFF_EXAMPLE_PLAY_CANCEL_default_instance_;
class PROBUFF_EXAMPLE_PLAY_CREATEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_PLAY_CREATE> _instance;
} _PROBUFF_EXAMPLE_PLAY_CREATE_default_instance_;
class PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE> _instance;
} _PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_default_instance_;
class PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE> _instance;
} _PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE_default_instance_;
class PROBUFF_EXAMPLE_GUESS_NUMBER_INFODefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_GUESS_NUMBER_INFO> _instance;
} _PROBUFF_EXAMPLE_GUESS_NUMBER_INFO_default_instance_;
class PROBUFF_EXAMPLE_GUESS_NUMBERDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_GUESS_NUMBER> _instance;
} _PROBUFF_EXAMPLE_GUESS_NUMBER_default_instance_;
class PROBUFF_EXAMPLE_GUESS_NUMBER_ERRORDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR> _instance;
} _PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR_default_instance_;
class PROBUFF_EXAMPLE_GUESS_NUMBER_BOMBDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB> _instance;
} _PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB_default_instance_;
}  // namespace pbexample
static void InitDefaultsscc_info_PLAYER_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PLAYER_default_instance_;
    new (ptr) ::pbexample::PLAYER();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PLAYER::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PLAYER_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PLAYER_example_2eproto}, {
      &scc_info_db_brief_db_2eproto.base,}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_GUESS_NUMBER_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_INFO_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_GUESS_NUMBER_INFO_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_INFO_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_INFO_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_CANCEL_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_PLAY_CANCEL_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_PLAY_CANCEL_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_CANCEL_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_CREATE_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_PLAY_CREATE_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_PLAY_CREATE_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_CREATE_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_JOIN_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_PLAY_JOIN_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_PLAY_JOIN_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_JOIN_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_PLAY_MATCHING_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_example_2eproto}, {
      &scc_info_PLAYER_example_2eproto.base,}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT_example_2eproto}, {}};

static void InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM_example_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pbexample::_PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM_default_instance_;
    new (ptr) ::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM_example_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM_example_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_example_2eproto[14];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_example_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_example_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_example_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN, mcross_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN, mtype_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE, mroomid_),
  0,
  PROTOBUF_FIELD_OFFSET(::pbexample::PLAYER, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PLAYER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PLAYER, mplayers_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PLAYER, misconfirm_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING, mroomid_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING, mtotalnumber_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING, mroomcreate_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING, mroomready_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING, mplayers_),
  0,
  1,
  2,
  3,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT, merrorcode_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT, mroomid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM, misconfirm_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM, mroomid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL, mtype_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL, mroomid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE, mtype_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE, mexampleactorid_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE, mstat_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE, mcross_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE, mtype_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE, mexampleactorid_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE, mcross_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE, mtype_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE, mexampleactorid_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE, mplayers_),
  0,
  1,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO, mmaxnumber_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO, mminnumber_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO, mwhoguess_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER, mguessnumber_),
  0,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR, mstat_),
  0,
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB, mbombvalue_),
  PROTOBUF_FIELD_OFFSET(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB, mroleid_),
  1,
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN)},
  { 9, 15, sizeof(::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)},
  { 16, 23, sizeof(::pbexample::PLAYER)},
  { 25, 35, sizeof(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING)},
  { 40, 47, sizeof(::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)},
  { 49, 56, sizeof(::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)},
  { 58, 65, sizeof(::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL)},
  { 67, 75, sizeof(::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE)},
  { 78, 86, sizeof(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)},
  { 89, 98, sizeof(::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)},
  { 102, 110, sizeof(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)},
  { 113, 119, sizeof(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER)},
  { 120, 126, sizeof(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)},
  { 127, 134, sizeof(::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_PLAY_JOIN_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PLAYER_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_PLAY_MATCHING_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_PLAY_CANCEL_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_PLAY_CREATE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_GUESS_NUMBER_INFO_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_GUESS_NUMBER_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbexample::_PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB_default_instance_),
};

const char descriptor_table_protodef_example_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rexample.proto\022\tpbexample\032\010db.proto\032\tne"
  "t.proto\"\203\001\n\031PROBUFF_EXAMPLE_PLAY_JOIN\022&\n"
  "\006mcross\030\001 \001(\0162\021.pbexample.ECROSSH\000\210\001\001\022)\n"
  "\005mtype\030\002 \001(\0162\025.pbexample.EPLAY_TYPEH\001\210\001\001"
  "B\t\n\007_mcrossB\010\n\006_mtype\"F\n\"PROBUFF_EXAMPLE"
  "_PLAY_JOIN_RESPONSE\022\024\n\007mroomid\030\002 \001(\005H\000\210\001"
  "\001B\n\n\010_mroomid\"d\n\006PLAYER\022%\n\010mplayers\030\001 \001("
  "\0132\016.pbdb.db_briefH\000\210\001\001\022\027\n\nmisconfirm\030\002 \001"
  "(\010H\001\210\001\001B\013\n\t_mplayersB\r\n\013_misconfirm\"\344\001\n\035"
  "PROBUFF_EXAMPLE_PLAY_MATCHING\022\024\n\007mroomid"
  "\030\001 \001(\005H\000\210\001\001\022\031\n\014mtotalnumber\030\002 \001(\005H\001\210\001\001\022\030"
  "\n\013mroomcreate\030\003 \001(\003H\002\210\001\001\022\027\n\nmroomready\030\004"
  " \001(\003H\003\210\001\001\022#\n\010mplayers\030\005 \003(\0132\021.pbexample."
  "PLAYERB\n\n\010_mroomidB\017\n\r_mtotalnumberB\016\n\014_"
  "mroomcreateB\r\n\013_mroomready\"\226\001\n$PROBUFF_E"
  "XAMPLE_PLAY_MATCHING_RESULT\022=\n\nmerrorcod"
  "e\030\001 \001(\0162$.pbexample.PLAY_MATCHING_EERROR"
  "_CODEH\000\210\001\001\022\024\n\007mroomid\030\002 \001(\005H\001\210\001\001B\r\n\013_mer"
  "rorcodeB\n\n\010_mroomid\"o\n#PROBUFF_EXAMPLE_P"
  "LAY_PLAYER_CONFIRM\022\027\n\nmisconfirm\030\001 \001(\010H\000"
  "\210\001\001\022\024\n\007mroomid\030\002 \001(\005H\001\210\001\001B\r\n\013_misconfirm"
  "B\n\n\010_mroomid\"t\n\033PROBUFF_EXAMPLE_PLAY_CAN"
  "CEL\022)\n\005mtype\030\001 \001(\0162\025.pbexample.EPLAY_TYP"
  "EH\000\210\001\001\022\024\n\007mroomid\030\002 \001(\005H\001\210\001\001B\010\n\006_mtypeB\n"
  "\n\010_mroomid\"\374\001\n\033PROBUFF_EXAMPLE_PLAY_CREA"
  "TE\022)\n\005mtype\030\001 \001(\0162\025.pbexample.EPLAY_TYPE"
  "H\000\210\001\001\022\034\n\017mexampleactorid\030\002 \001(\003H\001\210\001\001\022@\n\005m"
  "stat\030\003 \001(\0162,.pbexample.PROBUFF_EXAMPLE_P"
  "LAY_CREATE.estatH\002\210\001\001\"*\n\005estat\022\021\n\restat_"
  "success\020\000\022\016\n\nestat_fail\020\001B\010\n\006_mtypeB\022\n\020_"
  "mexampleactoridB\010\n\006_mstat\"\276\001\n\"PROBUFF_EX"
  "AMPLE_PLAY_ENTER_EXAMPLE\022&\n\006mcross\030\001 \001(\016"
  "2\021.pbexample.ECROSSH\000\210\001\001\022)\n\005mtype\030\002 \001(\0162"
  "\025.pbexample.EPLAY_TYPEH\001\210\001\001\022\034\n\017mexamplea"
  "ctorid\030\003 \001(\003H\002\210\001\001B\t\n\007_mcrossB\010\n\006_mtypeB\022"
  "\n\020_mexampleactorid\"\331\001\n+PROBUFF_EXAMPLE_P"
  "LAY_ENTER_EXAMPLE_RESPONSE\022&\n\006mcross\030\001 \001"
  "(\0162\021.pbexample.ECROSSH\000\210\001\001\022)\n\005mtype\030\002 \001("
  "\0162\025.pbexample.EPLAY_TYPEH\001\210\001\001\022\034\n\017mexampl"
  "eactorid\030\003 \001(\003H\002\210\001\001\022\020\n\010mplayers\030\004 \003(\003B\t\n"
  "\007_mcrossB\010\n\006_mtypeB\022\n\020_mexampleactorid\"\231"
  "\001\n!PROBUFF_EXAMPLE_GUESS_NUMBER_INFO\022\027\n\n"
  "mmaxnumber\030\001 \001(\005H\000\210\001\001\022\027\n\nmminnumber\030\002 \001("
  "\005H\001\210\001\001\022\026\n\tmwhoguess\030\003 \001(\003H\002\210\001\001B\r\n\013_mmaxn"
  "umberB\r\n\013_mminnumberB\014\n\n_mwhoguess\"J\n\034PR"
  "OBUFF_EXAMPLE_GUESS_NUMBER\022\031\n\014mguessnumb"
  "er\030\001 \001(\005H\000\210\001\001B\017\n\r_mguessnumber\"c\n\"PROBUF"
  "F_EXAMPLE_GUESS_NUMBER_ERROR\0223\n\005mstat\030\001 "
  "\001(\0162\037.pbexample.E_GUESS_NUMBER_ERRORH\000\210\001"
  "\001B\010\n\006_mstat\"m\n!PROBUFF_EXAMPLE_GUESS_NUM"
  "BER_BOMB\022\027\n\nmbombvalue\030\001 \001(\005H\000\210\001\001\022\024\n\007mro"
  "leid\030\002 \001(\003H\001\210\001\001B\r\n\013_mbombvalueB\n\n\010_mrole"
  "id*I\n\006ECROSS\022\017\n\013ECROSS_NULL\020\000\022\023\n\017ECROSS_"
  "ORDINARY\020\001\022\031\n\025ECROSS_CROSS_ORDINARY\020\002*4\n"
  "\nEPLAY_TYPE\022\016\n\nEPLAY_NULL\020\000\022\026\n\022EPLAY_GUE"
  "SS_NUMBER\020\001*\315\002\n\031PLAY_MATCHING_EERROR_COD"
  "E\022\027\n\023EERROR_CODE_SUCCESS\020\000\022\027\n\023EERROR_COD"
  "E_TIMEOUT\020\001\022\026\n\022EERROR_CODE_CANCEL\020\002\022\036\n\032E"
  "ERROR_CODE_CURRENT_CANCEL\020\003\022\033\n\027EERROR_CO"
  "DE_NOTFINDROOM\020\004\022\034\n\030EERROR_CODE_ROOM_DES"
  "TORY\020\005\022\026\n\022EERROR_CODE_FINISH\020\006\022\030\n\024EERROR"
  "_CODE_NOTMATCH\020\007\022\037\n\033EERROR_CODE_CREATERO"
  "OM_FAIL\020\010\022\037\n\033EERROR_CODE_CREATEGAME_FAIL"
  "\020\t\022\027\n\023EERROR_CODE_NOTFIND\020\n*y\n\024E_GUESS_N"
  "UMBER_ERROR\022\035\n\031E_GUESS_NUMBER_ERROR_NULL"
  "\020\000\022\036\n\032E_GUESS_NUMBER_ERROR_VALUE\020\001\022\"\n\036E_"
  "GUESS_NUMBER_ERROR_NOT_GUESS\020\002B\002H\001b\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_example_2eproto_deps[2] = {
  &::descriptor_table_db_2eproto,
  &::descriptor_table_net_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_example_2eproto_sccs[14] = {
  &scc_info_PLAYER_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_INFO_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_PLAY_CANCEL_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_PLAY_CREATE_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_PLAY_JOIN_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT_example_2eproto.base,
  &scc_info_PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM_example_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_example_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_example_2eproto = {
  false, false, descriptor_table_protodef_example_2eproto, "example.proto", 2682,
  &descriptor_table_example_2eproto_once, descriptor_table_example_2eproto_sccs, descriptor_table_example_2eproto_deps, 14, 2,
  schemas, file_default_instances, TableStruct_example_2eproto::offsets,
  file_level_metadata_example_2eproto, 14, file_level_enum_descriptors_example_2eproto, file_level_service_descriptors_example_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_example_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_example_2eproto)), true);
namespace pbexample {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PROBUFF_EXAMPLE_PLAY_CREATE_estat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_example_2eproto);
  return file_level_enum_descriptors_example_2eproto[0];
}
bool PROBUFF_EXAMPLE_PLAY_CREATE_estat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PROBUFF_EXAMPLE_PLAY_CREATE_estat PROBUFF_EXAMPLE_PLAY_CREATE::estat_success;
constexpr PROBUFF_EXAMPLE_PLAY_CREATE_estat PROBUFF_EXAMPLE_PLAY_CREATE::estat_fail;
constexpr PROBUFF_EXAMPLE_PLAY_CREATE_estat PROBUFF_EXAMPLE_PLAY_CREATE::estat_MIN;
constexpr PROBUFF_EXAMPLE_PLAY_CREATE_estat PROBUFF_EXAMPLE_PLAY_CREATE::estat_MAX;
constexpr int PROBUFF_EXAMPLE_PLAY_CREATE::estat_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECROSS_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_example_2eproto);
  return file_level_enum_descriptors_example_2eproto[1];
}
bool ECROSS_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPLAY_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_example_2eproto);
  return file_level_enum_descriptors_example_2eproto[2];
}
bool EPLAY_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PLAY_MATCHING_EERROR_CODE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_example_2eproto);
  return file_level_enum_descriptors_example_2eproto[3];
}
bool PLAY_MATCHING_EERROR_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* E_GUESS_NUMBER_ERROR_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_example_2eproto);
  return file_level_enum_descriptors_example_2eproto[4];
}
bool E_GUESS_NUMBER_ERROR_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PROBUFF_EXAMPLE_PLAY_JOIN::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_PLAY_JOIN::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_PLAY_JOIN>()._has_bits_);
  static void set_has_mcross(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PROBUFF_EXAMPLE_PLAY_JOIN::PROBUFF_EXAMPLE_PLAY_JOIN(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
}
PROBUFF_EXAMPLE_PLAY_JOIN::PROBUFF_EXAMPLE_PLAY_JOIN(const PROBUFF_EXAMPLE_PLAY_JOIN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mcross_, &from.mcross_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtype_) -
    reinterpret_cast<char*>(&mcross_)) + sizeof(mtype_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
}

void PROBUFF_EXAMPLE_PLAY_JOIN::SharedCtor() {
  ::memset(&mcross_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtype_) -
      reinterpret_cast<char*>(&mcross_)) + sizeof(mtype_));
}

PROBUFF_EXAMPLE_PLAY_JOIN::~PROBUFF_EXAMPLE_PLAY_JOIN() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_PLAY_JOIN::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_PLAY_JOIN::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_PLAY_JOIN* _this = reinterpret_cast< PROBUFF_EXAMPLE_PLAY_JOIN* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_PLAY_JOIN::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_PLAY_JOIN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_PLAY_JOIN& PROBUFF_EXAMPLE_PLAY_JOIN::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_PLAY_JOIN_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_PLAY_JOIN::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&mcross_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mtype_) -
        reinterpret_cast<char*>(&mcross_)) + sizeof(mtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_PLAY_JOIN::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pbexample.ECROSS mcross = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mcross(static_cast<::pbexample::ECROSS>(val));
        } else goto handle_unusual;
        continue;
      // .pbexample.EPLAY_TYPE mtype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mtype(static_cast<::pbexample::EPLAY_TYPE>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_PLAY_JOIN::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbexample.ECROSS mcross = 1;
  if (_internal_has_mcross()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mcross(), target);
  }

  // .pbexample.EPLAY_TYPE mtype = 2;
  if (_internal_has_mtype()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_mtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
  return target;
}

size_t PROBUFF_EXAMPLE_PLAY_JOIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .pbexample.ECROSS mcross = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mcross());
    }

    // .pbexample.EPLAY_TYPE mtype = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_PLAY_JOIN::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_PLAY_JOIN* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_PLAY_JOIN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_PLAY_JOIN::MergeFrom(const PROBUFF_EXAMPLE_PLAY_JOIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mcross_ = from.mcross_;
    }
    if (cached_has_bits & 0x00000002u) {
      mtype_ = from.mtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_PLAY_JOIN::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_PLAY_JOIN::CopyFrom(const PROBUFF_EXAMPLE_PLAY_JOIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_PLAY_JOIN::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_PLAY_JOIN::InternalSwap(PROBUFF_EXAMPLE_PLAY_JOIN* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_JOIN, mtype_)
      + sizeof(PROBUFF_EXAMPLE_PLAY_JOIN::mtype_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_JOIN, mcross_)>(
          reinterpret_cast<char*>(&mcross_),
          reinterpret_cast<char*>(&other->mcross_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_PLAY_JOIN::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE>()._has_bits_);
  static void set_has_mroomid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
}
PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE(const PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mroomid_ = from.mroomid_;
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
}

void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::SharedCtor() {
  mroomid_ = 0;
}

PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::~PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE* _this = reinterpret_cast< PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE& PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mroomid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 mroomid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mroomid(&has_bits);
          mroomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mroomid = 2;
  if (_internal_has_mroomid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_mroomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
  return target;
}

size_t PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 mroomid = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mroomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::MergeFrom(const PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mroomid()) {
    _internal_set_mroomid(from._internal_mroomid());
  }
}

void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::CopyFrom(const PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::InternalSwap(PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(mroomid_, other->mroomid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PLAYER::InitAsDefaultInstance() {
  ::pbexample::_PLAYER_default_instance_._instance.get_mutable()->mplayers_ = const_cast< ::pbdb::db_brief*>(
      ::pbdb::db_brief::internal_default_instance());
}
class PLAYER::_Internal {
 public:
  using HasBits = decltype(std::declval<PLAYER>()._has_bits_);
  static const ::pbdb::db_brief& mplayers(const PLAYER* msg);
  static void set_has_mplayers(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_misconfirm(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::pbdb::db_brief&
PLAYER::_Internal::mplayers(const PLAYER* msg) {
  return *msg->mplayers_;
}
void PLAYER::clear_mplayers() {
  if (GetArena() == nullptr && mplayers_ != nullptr) {
    delete mplayers_;
  }
  mplayers_ = nullptr;
  _has_bits_[0] &= ~0x00000001u;
}
PLAYER::PLAYER(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PLAYER)
}
PLAYER::PLAYER(const PLAYER& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mplayers()) {
    mplayers_ = new ::pbdb::db_brief(*from.mplayers_);
  } else {
    mplayers_ = nullptr;
  }
  misconfirm_ = from.misconfirm_;
  // @@protoc_insertion_point(copy_constructor:pbexample.PLAYER)
}

void PLAYER::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PLAYER_example_2eproto.base);
  ::memset(&mplayers_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&misconfirm_) -
      reinterpret_cast<char*>(&mplayers_)) + sizeof(misconfirm_));
}

PLAYER::~PLAYER() {
  // @@protoc_insertion_point(destructor:pbexample.PLAYER)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PLAYER::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mplayers_;
}

void PLAYER::ArenaDtor(void* object) {
  PLAYER* _this = reinterpret_cast< PLAYER* >(object);
  (void)_this;
}
void PLAYER::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PLAYER::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PLAYER& PLAYER::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PLAYER_example_2eproto.base);
  return *internal_default_instance();
}


void PLAYER::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PLAYER)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    if (GetArena() == nullptr && mplayers_ != nullptr) {
      delete mplayers_;
    }
    mplayers_ = nullptr;
  }
  misconfirm_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PLAYER::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pbdb.db_brief mplayers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mplayers(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool misconfirm = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_misconfirm(&has_bits);
          misconfirm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PLAYER::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PLAYER)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbdb.db_brief mplayers = 1;
  if (_internal_has_mplayers()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mplayers(this), target, stream);
  }

  // bool misconfirm = 2;
  if (_internal_has_misconfirm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_misconfirm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PLAYER)
  return target;
}

size_t PLAYER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PLAYER)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .pbdb.db_brief mplayers = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mplayers_);
    }

    // bool misconfirm = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PLAYER::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PLAYER)
  GOOGLE_DCHECK_NE(&from, this);
  const PLAYER* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PLAYER>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PLAYER)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PLAYER)
    MergeFrom(*source);
  }
}

void PLAYER::MergeFrom(const PLAYER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PLAYER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_mplayers()->::pbdb::db_brief::MergeFrom(from._internal_mplayers());
    }
    if (cached_has_bits & 0x00000002u) {
      misconfirm_ = from.misconfirm_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PLAYER::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PLAYER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PLAYER::CopyFrom(const PLAYER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PLAYER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PLAYER::IsInitialized() const {
  return true;
}

void PLAYER::InternalSwap(PLAYER* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PLAYER, misconfirm_)
      + sizeof(PLAYER::misconfirm_)
      - PROTOBUF_FIELD_OFFSET(PLAYER, mplayers_)>(
          reinterpret_cast<char*>(&mplayers_),
          reinterpret_cast<char*>(&other->mplayers_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PLAYER::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_PLAY_MATCHING::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_PLAY_MATCHING::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_PLAY_MATCHING>()._has_bits_);
  static void set_has_mroomid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtotalnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mroomcreate(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_mroomready(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

PROBUFF_EXAMPLE_PLAY_MATCHING::PROBUFF_EXAMPLE_PLAY_MATCHING(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mplayers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
}
PROBUFF_EXAMPLE_PLAY_MATCHING::PROBUFF_EXAMPLE_PLAY_MATCHING(const PROBUFF_EXAMPLE_PLAY_MATCHING& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      mplayers_(from.mplayers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mroomid_, &from.mroomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mroomready_) -
    reinterpret_cast<char*>(&mroomid_)) + sizeof(mroomready_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
}

void PROBUFF_EXAMPLE_PLAY_MATCHING::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_example_2eproto.base);
  ::memset(&mroomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mroomready_) -
      reinterpret_cast<char*>(&mroomid_)) + sizeof(mroomready_));
}

PROBUFF_EXAMPLE_PLAY_MATCHING::~PROBUFF_EXAMPLE_PLAY_MATCHING() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_PLAY_MATCHING::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_PLAY_MATCHING::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_PLAY_MATCHING* _this = reinterpret_cast< PROBUFF_EXAMPLE_PLAY_MATCHING* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_PLAY_MATCHING::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_PLAY_MATCHING::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_PLAY_MATCHING& PROBUFF_EXAMPLE_PLAY_MATCHING::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_PLAY_MATCHING::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mplayers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&mroomid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mroomready_) -
        reinterpret_cast<char*>(&mroomid_)) + sizeof(mroomready_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_PLAY_MATCHING::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 mroomid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_mroomid(&has_bits);
          mroomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 mtotalnumber = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mtotalnumber(&has_bits);
          mtotalnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 mroomcreate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mroomcreate(&has_bits);
          mroomcreate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 mroomready = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_mroomready(&has_bits);
          mroomready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pbexample.PLAYER mplayers = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mplayers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_PLAY_MATCHING::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mroomid = 1;
  if (_internal_has_mroomid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_mroomid(), target);
  }

  // int32 mtotalnumber = 2;
  if (_internal_has_mtotalnumber()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_mtotalnumber(), target);
  }

  // int64 mroomcreate = 3;
  if (_internal_has_mroomcreate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_mroomcreate(), target);
  }

  // int64 mroomready = 4;
  if (_internal_has_mroomready()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_mroomready(), target);
  }

  // repeated .pbexample.PLAYER mplayers = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_mplayers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_mplayers(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
  return target;
}

size_t PROBUFF_EXAMPLE_PLAY_MATCHING::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pbexample.PLAYER mplayers = 5;
  total_size += 1UL * this->_internal_mplayers_size();
  for (const auto& msg : this->mplayers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // int32 mroomid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_mroomid());
    }

    // int32 mtotalnumber = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_mtotalnumber());
    }

    // int64 mroomcreate = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_mroomcreate());
    }

    // int64 mroomready = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_mroomready());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_PLAY_MATCHING::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_PLAY_MATCHING* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_PLAY_MATCHING>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_PLAY_MATCHING::MergeFrom(const PROBUFF_EXAMPLE_PLAY_MATCHING& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mplayers_.MergeFrom(from.mplayers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mroomid_ = from.mroomid_;
    }
    if (cached_has_bits & 0x00000002u) {
      mtotalnumber_ = from.mtotalnumber_;
    }
    if (cached_has_bits & 0x00000004u) {
      mroomcreate_ = from.mroomcreate_;
    }
    if (cached_has_bits & 0x00000008u) {
      mroomready_ = from.mroomready_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_PLAY_MATCHING::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_PLAY_MATCHING::CopyFrom(const PROBUFF_EXAMPLE_PLAY_MATCHING& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_PLAY_MATCHING::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_PLAY_MATCHING::InternalSwap(PROBUFF_EXAMPLE_PLAY_MATCHING* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mplayers_.InternalSwap(&other->mplayers_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_MATCHING, mroomready_)
      + sizeof(PROBUFF_EXAMPLE_PLAY_MATCHING::mroomready_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_MATCHING, mroomid_)>(
          reinterpret_cast<char*>(&mroomid_),
          reinterpret_cast<char*>(&other->mroomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_PLAY_MATCHING::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT>()._has_bits_);
  static void set_has_merrorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mroomid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
}
PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT(const PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&merrorcode_, &from.merrorcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&mroomid_) -
    reinterpret_cast<char*>(&merrorcode_)) + sizeof(mroomid_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
}

void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::SharedCtor() {
  ::memset(&merrorcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mroomid_) -
      reinterpret_cast<char*>(&merrorcode_)) + sizeof(mroomid_));
}

PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::~PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT* _this = reinterpret_cast< PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT& PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&merrorcode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mroomid_) -
        reinterpret_cast<char*>(&merrorcode_)) + sizeof(mroomid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pbexample.PLAY_MATCHING_EERROR_CODE merrorcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_merrorcode(static_cast<::pbexample::PLAY_MATCHING_EERROR_CODE>(val));
        } else goto handle_unusual;
        continue;
      // int32 mroomid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mroomid(&has_bits);
          mroomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbexample.PLAY_MATCHING_EERROR_CODE merrorcode = 1;
  if (_internal_has_merrorcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_merrorcode(), target);
  }

  // int32 mroomid = 2;
  if (_internal_has_mroomid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_mroomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
  return target;
}

size_t PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .pbexample.PLAY_MATCHING_EERROR_CODE merrorcode = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_merrorcode());
    }

    // int32 mroomid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_mroomid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::MergeFrom(const PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      merrorcode_ = from.merrorcode_;
    }
    if (cached_has_bits & 0x00000002u) {
      mroomid_ = from.mroomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::CopyFrom(const PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::InternalSwap(PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT, mroomid_)
      + sizeof(PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::mroomid_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT, merrorcode_)>(
          reinterpret_cast<char*>(&merrorcode_),
          reinterpret_cast<char*>(&other->merrorcode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM>()._has_bits_);
  static void set_has_misconfirm(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mroomid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
}
PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM(const PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&misconfirm_, &from.misconfirm_,
    static_cast<size_t>(reinterpret_cast<char*>(&mroomid_) -
    reinterpret_cast<char*>(&misconfirm_)) + sizeof(mroomid_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
}

void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::SharedCtor() {
  ::memset(&misconfirm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mroomid_) -
      reinterpret_cast<char*>(&misconfirm_)) + sizeof(mroomid_));
}

PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::~PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM* _this = reinterpret_cast< PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM& PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&misconfirm_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mroomid_) -
        reinterpret_cast<char*>(&misconfirm_)) + sizeof(mroomid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool misconfirm = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_misconfirm(&has_bits);
          misconfirm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 mroomid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mroomid(&has_bits);
          mroomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool misconfirm = 1;
  if (_internal_has_misconfirm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_misconfirm(), target);
  }

  // int32 mroomid = 2;
  if (_internal_has_mroomid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_mroomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
  return target;
}

size_t PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // bool misconfirm = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // int32 mroomid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_mroomid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::MergeFrom(const PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      misconfirm_ = from.misconfirm_;
    }
    if (cached_has_bits & 0x00000002u) {
      mroomid_ = from.mroomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::CopyFrom(const PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::InternalSwap(PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM, mroomid_)
      + sizeof(PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::mroomid_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM, misconfirm_)>(
          reinterpret_cast<char*>(&misconfirm_),
          reinterpret_cast<char*>(&other->misconfirm_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_PLAY_CANCEL::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_PLAY_CANCEL::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_PLAY_CANCEL>()._has_bits_);
  static void set_has_mtype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mroomid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PROBUFF_EXAMPLE_PLAY_CANCEL::PROBUFF_EXAMPLE_PLAY_CANCEL(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
}
PROBUFF_EXAMPLE_PLAY_CANCEL::PROBUFF_EXAMPLE_PLAY_CANCEL(const PROBUFF_EXAMPLE_PLAY_CANCEL& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mtype_, &from.mtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&mroomid_) -
    reinterpret_cast<char*>(&mtype_)) + sizeof(mroomid_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
}

void PROBUFF_EXAMPLE_PLAY_CANCEL::SharedCtor() {
  ::memset(&mtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mroomid_) -
      reinterpret_cast<char*>(&mtype_)) + sizeof(mroomid_));
}

PROBUFF_EXAMPLE_PLAY_CANCEL::~PROBUFF_EXAMPLE_PLAY_CANCEL() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_PLAY_CANCEL::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_PLAY_CANCEL::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_PLAY_CANCEL* _this = reinterpret_cast< PROBUFF_EXAMPLE_PLAY_CANCEL* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_PLAY_CANCEL::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_PLAY_CANCEL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_PLAY_CANCEL& PROBUFF_EXAMPLE_PLAY_CANCEL::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_PLAY_CANCEL_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_PLAY_CANCEL::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&mtype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mroomid_) -
        reinterpret_cast<char*>(&mtype_)) + sizeof(mroomid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_PLAY_CANCEL::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pbexample.EPLAY_TYPE mtype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mtype(static_cast<::pbexample::EPLAY_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // int32 mroomid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mroomid(&has_bits);
          mroomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_PLAY_CANCEL::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbexample.EPLAY_TYPE mtype = 1;
  if (_internal_has_mtype()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mtype(), target);
  }

  // int32 mroomid = 2;
  if (_internal_has_mroomid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_mroomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
  return target;
}

size_t PROBUFF_EXAMPLE_PLAY_CANCEL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .pbexample.EPLAY_TYPE mtype = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mtype());
    }

    // int32 mroomid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_mroomid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_PLAY_CANCEL::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_PLAY_CANCEL* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_PLAY_CANCEL>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_PLAY_CANCEL::MergeFrom(const PROBUFF_EXAMPLE_PLAY_CANCEL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mtype_ = from.mtype_;
    }
    if (cached_has_bits & 0x00000002u) {
      mroomid_ = from.mroomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_PLAY_CANCEL::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_PLAY_CANCEL::CopyFrom(const PROBUFF_EXAMPLE_PLAY_CANCEL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_CANCEL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_PLAY_CANCEL::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_PLAY_CANCEL::InternalSwap(PROBUFF_EXAMPLE_PLAY_CANCEL* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_CANCEL, mroomid_)
      + sizeof(PROBUFF_EXAMPLE_PLAY_CANCEL::mroomid_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_CANCEL, mtype_)>(
          reinterpret_cast<char*>(&mtype_),
          reinterpret_cast<char*>(&other->mtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_PLAY_CANCEL::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_PLAY_CREATE::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_PLAY_CREATE::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_PLAY_CREATE>()._has_bits_);
  static void set_has_mtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mexampleactorid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mstat(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PROBUFF_EXAMPLE_PLAY_CREATE::PROBUFF_EXAMPLE_PLAY_CREATE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
}
PROBUFF_EXAMPLE_PLAY_CREATE::PROBUFF_EXAMPLE_PLAY_CREATE(const PROBUFF_EXAMPLE_PLAY_CREATE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mexampleactorid_, &from.mexampleactorid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mstat_) -
    reinterpret_cast<char*>(&mexampleactorid_)) + sizeof(mstat_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
}

void PROBUFF_EXAMPLE_PLAY_CREATE::SharedCtor() {
  ::memset(&mexampleactorid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mstat_) -
      reinterpret_cast<char*>(&mexampleactorid_)) + sizeof(mstat_));
}

PROBUFF_EXAMPLE_PLAY_CREATE::~PROBUFF_EXAMPLE_PLAY_CREATE() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_PLAY_CREATE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_PLAY_CREATE::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_PLAY_CREATE* _this = reinterpret_cast< PROBUFF_EXAMPLE_PLAY_CREATE* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_PLAY_CREATE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_PLAY_CREATE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_PLAY_CREATE& PROBUFF_EXAMPLE_PLAY_CREATE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_PLAY_CREATE_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_PLAY_CREATE::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&mexampleactorid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mstat_) -
        reinterpret_cast<char*>(&mexampleactorid_)) + sizeof(mstat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_PLAY_CREATE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pbexample.EPLAY_TYPE mtype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mtype(static_cast<::pbexample::EPLAY_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // int64 mexampleactorid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mexampleactorid(&has_bits);
          mexampleactorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pbexample.PROBUFF_EXAMPLE_PLAY_CREATE.estat mstat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mstat(static_cast<::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE_estat>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_PLAY_CREATE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbexample.EPLAY_TYPE mtype = 1;
  if (_internal_has_mtype()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mtype(), target);
  }

  // int64 mexampleactorid = 2;
  if (_internal_has_mexampleactorid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_mexampleactorid(), target);
  }

  // .pbexample.PROBUFF_EXAMPLE_PLAY_CREATE.estat mstat = 3;
  if (_internal_has_mstat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_mstat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
  return target;
}

size_t PROBUFF_EXAMPLE_PLAY_CREATE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // int64 mexampleactorid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_mexampleactorid());
    }

    // .pbexample.EPLAY_TYPE mtype = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mtype());
    }

    // .pbexample.PROBUFF_EXAMPLE_PLAY_CREATE.estat mstat = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mstat());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_PLAY_CREATE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_PLAY_CREATE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_PLAY_CREATE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_PLAY_CREATE::MergeFrom(const PROBUFF_EXAMPLE_PLAY_CREATE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mexampleactorid_ = from.mexampleactorid_;
    }
    if (cached_has_bits & 0x00000002u) {
      mtype_ = from.mtype_;
    }
    if (cached_has_bits & 0x00000004u) {
      mstat_ = from.mstat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_PLAY_CREATE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_PLAY_CREATE::CopyFrom(const PROBUFF_EXAMPLE_PLAY_CREATE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_CREATE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_PLAY_CREATE::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_PLAY_CREATE::InternalSwap(PROBUFF_EXAMPLE_PLAY_CREATE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_CREATE, mstat_)
      + sizeof(PROBUFF_EXAMPLE_PLAY_CREATE::mstat_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_CREATE, mexampleactorid_)>(
          reinterpret_cast<char*>(&mexampleactorid_),
          reinterpret_cast<char*>(&other->mexampleactorid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_PLAY_CREATE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE>()._has_bits_);
  static void set_has_mcross(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mexampleactorid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
}
PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE(const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mcross_, &from.mcross_,
    static_cast<size_t>(reinterpret_cast<char*>(&mexampleactorid_) -
    reinterpret_cast<char*>(&mcross_)) + sizeof(mexampleactorid_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::SharedCtor() {
  ::memset(&mcross_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mexampleactorid_) -
      reinterpret_cast<char*>(&mcross_)) + sizeof(mexampleactorid_));
}

PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::~PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE* _this = reinterpret_cast< PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE& PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&mcross_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mexampleactorid_) -
        reinterpret_cast<char*>(&mcross_)) + sizeof(mexampleactorid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pbexample.ECROSS mcross = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mcross(static_cast<::pbexample::ECROSS>(val));
        } else goto handle_unusual;
        continue;
      // .pbexample.EPLAY_TYPE mtype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mtype(static_cast<::pbexample::EPLAY_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // int64 mexampleactorid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mexampleactorid(&has_bits);
          mexampleactorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbexample.ECROSS mcross = 1;
  if (_internal_has_mcross()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mcross(), target);
  }

  // .pbexample.EPLAY_TYPE mtype = 2;
  if (_internal_has_mtype()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_mtype(), target);
  }

  // int64 mexampleactorid = 3;
  if (_internal_has_mexampleactorid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_mexampleactorid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
  return target;
}

size_t PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .pbexample.ECROSS mcross = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mcross());
    }

    // .pbexample.EPLAY_TYPE mtype = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mtype());
    }

    // int64 mexampleactorid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_mexampleactorid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::MergeFrom(const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mcross_ = from.mcross_;
    }
    if (cached_has_bits & 0x00000002u) {
      mtype_ = from.mtype_;
    }
    if (cached_has_bits & 0x00000004u) {
      mexampleactorid_ = from.mexampleactorid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::CopyFrom(const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::InternalSwap(PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE, mexampleactorid_)
      + sizeof(PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::mexampleactorid_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE, mcross_)>(
          reinterpret_cast<char*>(&mcross_),
          reinterpret_cast<char*>(&other->mcross_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE>()._has_bits_);
  static void set_has_mcross(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mexampleactorid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mplayers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
}
PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE(const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      mplayers_(from.mplayers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mcross_, &from.mcross_,
    static_cast<size_t>(reinterpret_cast<char*>(&mexampleactorid_) -
    reinterpret_cast<char*>(&mcross_)) + sizeof(mexampleactorid_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::SharedCtor() {
  ::memset(&mcross_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mexampleactorid_) -
      reinterpret_cast<char*>(&mcross_)) + sizeof(mexampleactorid_));
}

PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::~PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE* _this = reinterpret_cast< PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE& PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mplayers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&mcross_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mexampleactorid_) -
        reinterpret_cast<char*>(&mcross_)) + sizeof(mexampleactorid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pbexample.ECROSS mcross = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mcross(static_cast<::pbexample::ECROSS>(val));
        } else goto handle_unusual;
        continue;
      // .pbexample.EPLAY_TYPE mtype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mtype(static_cast<::pbexample::EPLAY_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // int64 mexampleactorid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mexampleactorid(&has_bits);
          mexampleactorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 mplayers = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_mplayers(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          _internal_add_mplayers(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbexample.ECROSS mcross = 1;
  if (_internal_has_mcross()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mcross(), target);
  }

  // .pbexample.EPLAY_TYPE mtype = 2;
  if (_internal_has_mtype()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_mtype(), target);
  }

  // int64 mexampleactorid = 3;
  if (_internal_has_mexampleactorid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_mexampleactorid(), target);
  }

  // repeated int64 mplayers = 4;
  {
    int byte_size = _mplayers_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          4, _internal_mplayers(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
  return target;
}

size_t PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 mplayers = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->mplayers_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _mplayers_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .pbexample.ECROSS mcross = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mcross());
    }

    // .pbexample.EPLAY_TYPE mtype = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mtype());
    }

    // int64 mexampleactorid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_mexampleactorid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::MergeFrom(const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mplayers_.MergeFrom(from.mplayers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mcross_ = from.mcross_;
    }
    if (cached_has_bits & 0x00000002u) {
      mtype_ = from.mtype_;
    }
    if (cached_has_bits & 0x00000004u) {
      mexampleactorid_ = from.mexampleactorid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::CopyFrom(const PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::InternalSwap(PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mplayers_.InternalSwap(&other->mplayers_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE, mexampleactorid_)
      + sizeof(PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::mexampleactorid_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE, mcross_)>(
          reinterpret_cast<char*>(&mcross_),
          reinterpret_cast<char*>(&other->mcross_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_GUESS_NUMBER_INFO>()._has_bits_);
  static void set_has_mmaxnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mminnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mwhoguess(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
}
PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO(const PROBUFF_EXAMPLE_GUESS_NUMBER_INFO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mmaxnumber_, &from.mmaxnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&mwhoguess_) -
    reinterpret_cast<char*>(&mmaxnumber_)) + sizeof(mwhoguess_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::SharedCtor() {
  ::memset(&mmaxnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mwhoguess_) -
      reinterpret_cast<char*>(&mmaxnumber_)) + sizeof(mwhoguess_));
}

PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::~PROBUFF_EXAMPLE_GUESS_NUMBER_INFO() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_GUESS_NUMBER_INFO* _this = reinterpret_cast< PROBUFF_EXAMPLE_GUESS_NUMBER_INFO* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_GUESS_NUMBER_INFO& PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_INFO_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&mmaxnumber_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mwhoguess_) -
        reinterpret_cast<char*>(&mmaxnumber_)) + sizeof(mwhoguess_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 mmaxnumber = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_mmaxnumber(&has_bits);
          mmaxnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 mminnumber = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mminnumber(&has_bits);
          mminnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 mwhoguess = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_mwhoguess(&has_bits);
          mwhoguess_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mmaxnumber = 1;
  if (_internal_has_mmaxnumber()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_mmaxnumber(), target);
  }

  // int32 mminnumber = 2;
  if (_internal_has_mminnumber()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_mminnumber(), target);
  }

  // int64 mwhoguess = 3;
  if (_internal_has_mwhoguess()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_mwhoguess(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
  return target;
}

size_t PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // int32 mmaxnumber = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_mmaxnumber());
    }

    // int32 mminnumber = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_mminnumber());
    }

    // int64 mwhoguess = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_mwhoguess());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_GUESS_NUMBER_INFO* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_GUESS_NUMBER_INFO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::MergeFrom(const PROBUFF_EXAMPLE_GUESS_NUMBER_INFO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mmaxnumber_ = from.mmaxnumber_;
    }
    if (cached_has_bits & 0x00000002u) {
      mminnumber_ = from.mminnumber_;
    }
    if (cached_has_bits & 0x00000004u) {
      mwhoguess_ = from.mwhoguess_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::CopyFrom(const PROBUFF_EXAMPLE_GUESS_NUMBER_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::InternalSwap(PROBUFF_EXAMPLE_GUESS_NUMBER_INFO* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_GUESS_NUMBER_INFO, mwhoguess_)
      + sizeof(PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::mwhoguess_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_GUESS_NUMBER_INFO, mmaxnumber_)>(
          reinterpret_cast<char*>(&mmaxnumber_),
          reinterpret_cast<char*>(&other->mmaxnumber_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_GUESS_NUMBER_INFO::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_GUESS_NUMBER::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_GUESS_NUMBER::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_GUESS_NUMBER>()._has_bits_);
  static void set_has_mguessnumber(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PROBUFF_EXAMPLE_GUESS_NUMBER::PROBUFF_EXAMPLE_GUESS_NUMBER(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
}
PROBUFF_EXAMPLE_GUESS_NUMBER::PROBUFF_EXAMPLE_GUESS_NUMBER(const PROBUFF_EXAMPLE_GUESS_NUMBER& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mguessnumber_ = from.mguessnumber_;
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
}

void PROBUFF_EXAMPLE_GUESS_NUMBER::SharedCtor() {
  mguessnumber_ = 0;
}

PROBUFF_EXAMPLE_GUESS_NUMBER::~PROBUFF_EXAMPLE_GUESS_NUMBER() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_GUESS_NUMBER::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_GUESS_NUMBER::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_GUESS_NUMBER* _this = reinterpret_cast< PROBUFF_EXAMPLE_GUESS_NUMBER* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_GUESS_NUMBER::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_GUESS_NUMBER::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_GUESS_NUMBER& PROBUFF_EXAMPLE_GUESS_NUMBER::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_GUESS_NUMBER::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mguessnumber_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_GUESS_NUMBER::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 mguessnumber = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_mguessnumber(&has_bits);
          mguessnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_GUESS_NUMBER::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mguessnumber = 1;
  if (_internal_has_mguessnumber()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_mguessnumber(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
  return target;
}

size_t PROBUFF_EXAMPLE_GUESS_NUMBER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 mguessnumber = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mguessnumber());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_GUESS_NUMBER::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_GUESS_NUMBER* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_GUESS_NUMBER>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_GUESS_NUMBER::MergeFrom(const PROBUFF_EXAMPLE_GUESS_NUMBER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mguessnumber()) {
    _internal_set_mguessnumber(from._internal_mguessnumber());
  }
}

void PROBUFF_EXAMPLE_GUESS_NUMBER::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_GUESS_NUMBER::CopyFrom(const PROBUFF_EXAMPLE_GUESS_NUMBER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_GUESS_NUMBER::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_GUESS_NUMBER::InternalSwap(PROBUFF_EXAMPLE_GUESS_NUMBER* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(mguessnumber_, other->mguessnumber_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_GUESS_NUMBER::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR>()._has_bits_);
  static void set_has_mstat(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
}
PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR(const PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mstat_ = from.mstat_;
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::SharedCtor() {
  mstat_ = 0;
}

PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::~PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR* _this = reinterpret_cast< PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR& PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mstat_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pbexample.E_GUESS_NUMBER_ERROR mstat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mstat(static_cast<::pbexample::E_GUESS_NUMBER_ERROR>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbexample.E_GUESS_NUMBER_ERROR mstat = 1;
  if (_internal_has_mstat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mstat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
  return target;
}

size_t PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pbexample.E_GUESS_NUMBER_ERROR mstat = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mstat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::MergeFrom(const PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mstat()) {
    _internal_set_mstat(from._internal_mstat());
  }
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::CopyFrom(const PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::InternalSwap(PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(mstat_, other->mstat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::InitAsDefaultInstance() {
}
class PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::_Internal {
 public:
  using HasBits = decltype(std::declval<PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB>()._has_bits_);
  static void set_has_mbombvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_mroleid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
}
PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB(const PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mroleid_, &from.mroleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mbombvalue_) -
    reinterpret_cast<char*>(&mroleid_)) + sizeof(mbombvalue_));
  // @@protoc_insertion_point(copy_constructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::SharedCtor() {
  ::memset(&mroleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mbombvalue_) -
      reinterpret_cast<char*>(&mroleid_)) + sizeof(mbombvalue_));
}

PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::~PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB() {
  // @@protoc_insertion_point(destructor:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::ArenaDtor(void* object) {
  PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB* _this = reinterpret_cast< PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB* >(object);
  (void)_this;
}
void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB& PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB_example_2eproto.base);
  return *internal_default_instance();
}


void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::Clear() {
// @@protoc_insertion_point(message_clear_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&mroleid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mbombvalue_) -
        reinterpret_cast<char*>(&mroleid_)) + sizeof(mbombvalue_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 mbombvalue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_mbombvalue(&has_bits);
          mbombvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 mroleid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mroleid(&has_bits);
          mroleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mbombvalue = 1;
  if (_internal_has_mbombvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_mbombvalue(), target);
  }

  // int64 mroleid = 2;
  if (_internal_has_mroleid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_mroleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
  return target;
}

size_t PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // int64 mroleid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_mroleid());
    }

    // int32 mbombvalue = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_mbombvalue());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
  GOOGLE_DCHECK_NE(&from, this);
  const PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
    MergeFrom(*source);
  }
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::MergeFrom(const PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mroleid_ = from.mroleid_;
    }
    if (cached_has_bits & 0x00000002u) {
      mbombvalue_ = from.mbombvalue_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::CopyFrom(const PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbexample.PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::IsInitialized() const {
  return true;
}

void PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::InternalSwap(PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB, mbombvalue_)
      + sizeof(PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::mbombvalue_)
      - PROTOBUF_FIELD_OFFSET(PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB, mroleid_)>(
          reinterpret_cast<char*>(&mroleid_),
          reinterpret_cast<char*>(&other->mroleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pbexample
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_PLAY_JOIN_RESPONSE >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PLAYER* Arena::CreateMaybeMessage< ::pbexample::PLAYER >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PLAYER >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_PLAY_MATCHING_RESULT >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_PLAY_PLAYER_CONFIRM >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_PLAY_CANCEL >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_PLAY_CREATE >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_PLAY_ENTER_EXAMPLE_RESPONSE >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_INFO >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_ERROR >(arena);
}
template<> PROTOBUF_NOINLINE ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB* Arena::CreateMaybeMessage< ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbexample::PROBUFF_EXAMPLE_GUESS_NUMBER_BOMB >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
